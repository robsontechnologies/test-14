//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

/** Type of workflow trigger */
export const ConnectionWorkflowTriggerType = {
    /** Request Started */
    RequestStarted: 0,

    /** Request Connected */
    RequestConnected: 1,

    /** Status Changed */
    StatusChanged: 2,

    /** State Changed */
    StateChanged: 3,

    /** Activity Added */
    ActivityAdded: 4,

    /** Placed in a group */
    PlacementGroupAssigned: 5,

    /** Manual */
    Manual: 6,

    /** Request Transferred */
    RequestTransferred: 7,

    /** Request Assigned */
    RequestAssigned: 8,

    /** Future Follow-up Date Reached */
    FutureFollowupDateReached: 9
} as const;

/** Type of workflow trigger */
export const ConnectionWorkflowTriggerTypeDescription: Record<number, string> = {
    0: "Request Started",

    1: "Request Connected",

    2: "Status Changed",

    3: "State Changed",

    4: "Activity Added",

    5: "Placement Group Assigned",

    6: "Manual",

    7: "Request Transferred",

    8: "Request Assigned",

    9: "Future Followup Date Reached"
};

/** Type of workflow trigger */
export type ConnectionWorkflowTriggerType = typeof ConnectionWorkflowTriggerType[keyof typeof ConnectionWorkflowTriggerType];
