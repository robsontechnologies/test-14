//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

/** How registrar information should be collected. */
export const RegistrarOption = {
    /** Prompt for registrar */
    PromptForRegistrar: 0,

    /** Prefill first registrant */
    PrefillFirstRegistrant: 1,

    /** Use first registrant */
    UseFirstRegistrant: 2,

    /**
     * Use the LoggedIn person and keep fields readonly, except for fields that haven't been collected yet
     * For example, if EmailAddress wasn't known, Email would be prompted vs readonly.
     */
    UseLoggedInPerson: 3
} as const;

/** How registrar information should be collected. */
export const RegistrarOptionDescription: Record<number, string> = {
    0: "Prompt For Registrar",

    1: "Prefill First Registrant",

    2: "Use First Registrant",

    3: "Use Logged In Person"
};

/** How registrar information should be collected. */
export type RegistrarOption = typeof RegistrarOption[keyof typeof RegistrarOption];
