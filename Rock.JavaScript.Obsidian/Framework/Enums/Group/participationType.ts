//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

/** Represents and indicates the participation type or mode used in a Fundraising Opportunity Rock.Model.GroupType to determine the way contributions and participants are displayed. */
export const ParticipationType = {
    /** Participation for this fundraising opportunity is for individuals. */
    Individual: 1,

    /** Participation for this fundraising opportunity is for families. */
    Family: 2
} as const;

/** Represents and indicates the participation type or mode used in a Fundraising Opportunity Rock.Model.GroupType to determine the way contributions and participants are displayed. */
export const ParticipationTypeDescription: Record<number, string> = {
    1: "Individual",

    2: "Family"
};

/** Represents and indicates the participation type or mode used in a Fundraising Opportunity Rock.Model.GroupType to determine the way contributions and participants are displayed. */
export type ParticipationType = typeof ParticipationType[keyof typeof ParticipationType];
